"""update waze api fields

Revision ID: 3e59d406d707
Revises: dfac32ad28e9
Create Date: 2020-10-19 16:28:02.553501

"""

# revision identifiers, used by Alembic.
revision = '3e59d406d707'
down_revision = 'dfac32ad28e9'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('waze_traffic_jams',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('line', sa.Text(), nullable=True),
    sa.Column('speed_kmh', sa.Integer(), nullable=True),
    sa.Column('turn_type', sa.Integer(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('uuid', sa.Text(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('segments', sa.Text(), nullable=True),
    sa.Column('road_type', sa.Integer(), nullable=True),
    sa.Column('delay', sa.Integer(), nullable=True),
    sa.Column('street', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('end_node', sa.Text(), nullable=True),
    sa.Column('blocking_alert_uuid', sa.Text(), nullable=True),
    sa.Column('start_node', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='LINESTRING', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_waze_traffic_jams_created_at'), 'waze_traffic_jams', ['created_at'], unique=False)
    op.create_index(op.f('ix_waze_traffic_jams_uuid'), 'waze_traffic_jams', ['uuid'], unique=True)

    # drop old table
    op.drop_index('idx_waze_trafic_jams_geom', table_name='waze_trafic_jams')
    op.drop_index('ix_waze_trafic_jams_created_at', table_name='waze_trafic_jams')
    op.drop_index('ix_waze_trafic_jams_uuid', table_name='waze_trafic_jams')
    op.drop_table('waze_trafic_jams')

    op.add_column('waze_alerts', sa.Column('jam_uuid', sa.Text(), nullable=True))
    op.add_column('waze_alerts', sa.Column('longitude', sa.Float(), nullable=True))
    op.add_column('waze_alerts', sa.Column('report_by_municipality_user', sa.Boolean(), nullable=True))
    op.add_column('waze_alerts', sa.Column('report_description', sa.Text(), nullable=True))
    op.drop_column('waze_alerts', 'lontitude')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('waze_alerts', sa.Column('lontitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('waze_alerts', 'report_description')
    op.drop_column('waze_alerts', 'report_by_municipality_user')
    op.drop_column('waze_alerts', 'longitude')
    op.drop_column('waze_alerts', 'jam_uuid')

    op.create_table('waze_trafic_jams',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('line', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('speed_kmh', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('turn_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('length', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('speed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('segments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('road_type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delay', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('street', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('end_node', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('blocking_alert_uuid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_node', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='LINESTRING', from_text='ST_GeomFromEWKT', name='geometry'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='waze_trafic_jams_pkey')
    )

    op.create_index('ix_waze_trafic_jams_uuid', 'waze_trafic_jams', ['uuid'], unique=True)
    op.create_index('ix_waze_trafic_jams_created_at', 'waze_trafic_jams', ['created_at'], unique=False)
    op.create_index('idx_waze_trafic_jams_geom', 'waze_trafic_jams', ['geom'], unique=False)

    op.drop_index(op.f('ix_waze_traffic_jams_uuid'), table_name='waze_traffic_jams')
    op.drop_index(op.f('ix_waze_traffic_jams_created_at'), table_name='waze_traffic_jams')
    op.drop_table('waze_traffic_jams')
    # ### end Alembic commands ###
