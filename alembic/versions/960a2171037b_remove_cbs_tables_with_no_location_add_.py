"""Remove CBS tables with no location, add cbs fields

Revision ID: 960a2171037b
Revises: c7dd68ed664f
Create Date: 2019-10-18 20:10:29.381427

"""

# revision identifiers, used by Alembic.
revision = '960a2171037b'
down_revision = 'c7dd68ed664f'
branch_labels = None
depends_on = None

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('accident_id_idx_vehicles_no_location', table_name='vehicles_no_location')
    op.drop_index('provider_and_id_idx_vehicles_no_location', table_name='vehicles_no_location')
    op.drop_table('vehicles_no_location')
    op.drop_index('accident_id_idx_involved_no_location', table_name='involved_no_location')
    op.drop_index('provider_and_id_idx_involved_no_location', table_name='involved_no_location')
    op.drop_table('involved_no_location')
    op.drop_index('ix_injury_severity_mais_id', table_name='injury_severity_mais')
    op.drop_index('ix_injury_severity_mais_provider_code', table_name='injury_severity_mais')
    op.drop_index('ix_injury_severity_mais_year', table_name='injury_severity_mais')
    op.drop_table('injury_severity_mais')
    op.drop_index('id_idx_markers_no_location', table_name='markers_no_location')
    op.drop_index('ix_markers_no_location_created', table_name='markers_no_location')
    op.drop_index('provider_and_id_idx_markers_no_location', table_name='markers_no_location')
    op.drop_table('markers_no_location')
    op.add_column('injured_around_school_all_data', sa.Column('involved_home_yishuv_shape', sa.Float(), nullable=True))
    op.add_column('injured_around_school_all_data', sa.Column('markers_house_number', sa.Float(), nullable=True))
    op.drop_column('injured_around_school_all_data', 'involved_home_residence_type')
    op.drop_column('injured_around_school_all_data', 'markers_home')
    op.add_column('involved', sa.Column('home_yishuv_shape', sa.Integer(), nullable=True))
    op.execute('DROP VIEW IF EXISTS involved_markers_hebrew')
    op.execute('DROP VIEW IF EXISTS vehicles_markers_hebrew')
    op.execute('DROP VIEW IF EXISTS markers_hebrew')
    op.execute('DROP VIEW IF EXISTS involved_hebrew')
    op.execute('DROP VIEW IF EXISTS vehicles_hebrew')
    op.drop_column('involved', 'home_residence_type')
    op.add_column('markers', sa.Column('house_number', sa.Integer(), nullable=True))
    op.drop_column('markers', 'home')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column('markers', sa.Column('home', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('markers', 'house_number')
    op.add_column('involved', sa.Column('home_residence_type', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('involved', 'home_yishuv_shape')
    op.add_column('injured_around_school_all_data',
                  sa.Column('markers_home', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                            nullable=True))
    op.add_column('injured_around_school_all_data',
                  sa.Column('involved_home_residence_type', postgresql.DOUBLE_PRECISION(precision=53),
                            autoincrement=False, nullable=True))
    op.drop_column('injured_around_school_all_data', 'markers_house_number')
    op.drop_column('injured_around_school_all_data', 'involved_home_yishuv_shape')
    op.create_table('involved_no_location',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('provider_and_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('provider_code', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('involved_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('license_acquiring_date', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('age_group', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('sex', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('safety_measures', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('involve_yishuv_symbol', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('injury_severity', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('injured_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('injured_position', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('population_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('home_region', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('home_district', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('home_natural_area', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('home_municipal_status', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('home_residence_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('hospital_time', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('medical_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('release_dest', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('safety_measures_use', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('late_deceased', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('car_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('involve_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_year', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_month', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('vehicle_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('injury_severity_mais', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='involved_no_location_pkey')
                    )
    op.create_index('provider_and_id_idx_involved_no_location', 'involved_no_location', ['provider_and_id'],
                    unique=False)
    op.create_index('accident_id_idx_involved_no_location', 'involved_no_location', ['accident_id'], unique=False)
    op.create_table('markers_no_location',
                    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
                    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
                    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
                    sa.Column('provider_and_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('provider_code', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('mainStreet', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('secondaryStreet', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('junction', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('one_lane', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('multi_lane', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('speed_limit', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_width', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_sign', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_light', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_control', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('weather', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_surface', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_object', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('object_distance', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('didnt_cross', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('cross_mode', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('cross_location', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('cross_direction', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('video_link', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('road1', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road2', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('km', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
                    sa.Column('yishuv_symbol', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('geo_area', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('day_night', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('day_in_week', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('traffic_light', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('region', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('district', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('natural_area', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('yishuv_shape', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('street1', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('street2', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('home', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('urban_intersection', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('non_urban_intersection', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_year', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_month', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_day', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_hour_raw', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_hour', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_minute', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_severity', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('day_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('location_accuracy', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('police_unit', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_intactness', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_shape', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('road_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('municipal_status', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', 'provider_code', name='markers_no_location_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_index('provider_and_id_idx_markers_no_location', 'markers_no_location', ['provider_and_id'], unique=True)
    op.create_index('ix_markers_no_location_created', 'markers_no_location', ['created'], unique=False)
    op.create_index('id_idx_markers_no_location', 'markers_no_location', ['id'], unique=False)
    op.create_table('injury_severity_mais',
                    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('provider_code', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('injury_severity_mais_hebrew', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', 'year', 'provider_code', name='injury_severity_mais_pkey')
                    )
    op.create_index('ix_injury_severity_mais_year', 'injury_severity_mais', ['year'], unique=False)
    op.create_index('ix_injury_severity_mais_provider_code', 'injury_severity_mais', ['provider_code'], unique=False)
    op.create_index('ix_injury_severity_mais_id', 'injury_severity_mais', ['id'], unique=False)
    op.create_table('vehicles_no_location',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('provider_and_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('provider_code', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('engine_volume', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('manufacturing_year', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('driving_directions', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('vehicle_status', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('vehicle_attribution', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('vehicle_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('seats', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('total_weight', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_month', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('accident_year', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('car_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('vehicle_damage', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='vehicles_no_location_pkey')
                    )
    op.create_index('provider_and_id_idx_vehicles_no_location', 'vehicles_no_location', ['provider_and_id'],
                    unique=False)
    op.create_index('accident_id_idx_vehicles_no_location', 'vehicles_no_location', ['accident_id'], unique=False)
    # ### end Alembic commands ###
