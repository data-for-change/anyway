version: '3'

services:
  anyway:
    build: .
    image: ghcr.io/data-for-change/anyway/anyway:latest
    container_name: anyway
    ports:
      - "8080:5000"
    environment:
      - DATABASE_URL=postgresql://anyway:anyway@db/anyway
      - FLASK_ENV=development
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - TWITTER_ACCESS_KEY
      - TWITTER_ACCESS_SECRET
      - GOOGLE_APPLICATION_CREDENTIALS=GOOGLE_APPLICATION_CREDENTIALS_KEY.json
      - MAPS_API_KEY
      - BOT_TOKEN
      - SELENIUM_URL
    volumes:
      - .:/anyway
    restart: always
    depends_on:
      - db
      - anyway-newsflash-infographics

  anyway-newsflash-infographics:
    build: ./anyway-newsflash-infographics/anyway-newsflash-infographics/.
    image: anyway-newsflash-infographics:latest
    container_name: anyway-newsflash-infographics
    ports:
      - "3000:3000"
    restart: always

  db:
    build: db_docker
    image: ghcr.io/data-for-change/anyway/db:latest
    container_name: db
    environment:
      - DBRESTORE_AWS_ACCESS_KEY_ID
      - DBRESTORE_AWS_SECRET_ACCESS_KEY
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "9876:5432"
    restart: always

  anyway-etl:
    image: ghcr.io/data-for-change/anyway-etl/anyway-etl:latest
    volumes:
      - anyway_etl_data:/var/anyway-etl-data
    depends_on:
      - db
    restart: "no"

  anyway-etl-nginx:
    image: ghcr.io/data-for-change/anyway-etl/anyway-etl-nginx:latest
    volumes:
      - anyway_etl_data:/var/anyway-etl-data
    restart: unless-stopped
    ports:
      - "8083:80"

  airflow-db:
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "123456"
    volumes:
      - "airflow-db:/var/lib/postgresql/data"

  airflow-webserver:
    image: ghcr.io/data-for-change/anyway-etl/anyway-etl-airflow:latest
    restart: unless-stopped
    environment:
      ANYWAY_ETL_AIRFLOW_INITIALIZE: "yes"
      ANYWAY_ETL_AIRFLOW_ROLE: "webserver"
      ANYWAY_ETL_AIRFLOW_ADMIN_PASSWORD: "123456"
    ports:
      - "8082:8080"
    volumes:
      - "airflow-home:/var/airflow"
    depends_on:
      - airflow-db

  airflow-scheduler:
    image: ghcr.io/data-for-change/anyway-etl/anyway-etl-airflow:latest
    restart: unless-stopped
    environment:
      ANYWAY_ETL_AIRFLOW_ROLE: "scheduler"
      ANYWAY_ETL_AIRFLOW_PIP_INSTALL_DEPS: "yes"
      IMAP_MAIL_USER: "${IMAP_MAIL_USER}"
      IMAP_MAIL_PASSWORD: "${IMAP_MAIL_PASSWORD}"
    volumes:
      - "airflow-home:/var/airflow"
      - anyway_etl_data:/var/anyway-etl-data
    depends_on:
      - airflow-webserver
      - db

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.3
    container_name: filebeat
    command: [ "/bin/bash", "-c", "chmod +x /usr/share/filebeat/filebeat && filebeat -e" ]
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro

#  mongo:
#    image: mongo:6
#    container_name: graylog-mongo
#    networks:
#      - graylog
#    restart: always
#
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: graylog-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/etc/kibana/kibana.yml
    depends_on:
      - elasticsearch
#  graylog:
#    image: graylog/graylog:5.1
#    container_name: graylog
#    environment:
#      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
#      - GRAYLOG_ROOT_PASSWORD_SHA2=e3c652f0ba0b4801205814f8b6bc49672c4c74e25b497770bb89b22cdeb4e951
#      - GRAYLOG_MONGODB_URI=mongodb://mongo:27017/graylog
#      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - GRAYLOG_PASSWORD_SECRET=3e76c85763b24e4f9f4b2c3e9a0b5d19
#    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 -- wait-for-it mongo:27017 -- /docker-entrypoint.sh
#    networks:
#      - graylog
#    ports:
#      - "9000:9000"  # Graylog web interface
#      - "12201:12201/udp"  # GELF UDP input
#    restart: always
#    depends_on:
#      - mongo
#      - elasticsearch

#  loki:
#    image: grafana/loki:latest
#    container_name: loki
#    ports:
#      - "3100:3100"
#    volumes:
#      - ./loki-config.yml:/etc/loki/local-config.yaml
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/log:/var/log:ro
#    command: -config.file=/etc/loki/local-config.yaml
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3002:3000"
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    volumes:
#      - grafana-data:/var/lib/grafana
#    depends_on:
#      - loki

volumes:
  db_data:
  anyway_etl_data:
  airflow-db:
  airflow-home:
  elasticsearch-data:
    driver: local

#networks:
#  graylog:
#    driver: bridge